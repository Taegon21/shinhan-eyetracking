version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: eyetracking
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 1q2w3e4r
    volumes:
      - postgres-data:/var/lib/postgresql/data

  main-server:
    build:
      context: .
      dockerfile: Dockerfile.main
    container_name: main-server
    ports:
      - "443:443"
    environment:
      - DB_HOST=postgres
      - KAFKA_BROKERS=kafka:9092
    volumes:
      - /etc/letsencrypt/live/www.shinhan-eyetracking.store/fullchain.pem:/etc/letsencrypt/live/www.shinhan-eyetracking.store/fullchain.pem:ro
      - /etc/letsencrypt/live/www.shinhan-eyetracking.store/privkey.pem:/etc/letsencrypt/live/www.shinhan-eyetracking.store/privkey.pem:ro
    depends_on:
      - postgres
      - kafka

  consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer
    container_name: consumer
    environment:
      - DB_HOST=postgres
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - kafka

volumes:
  postgres-data:
